// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 4822398465634309740),
      name: 'Item',
      lastPropertyId: const obx_int.IdUid(14, 1725407498194359687),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1943109653131199843),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4555199717921858688),
            name: 'itemName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 9206127673864847411),
            name: 'quantity',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2851189830841669608),
            name: 'mrp',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3522839075026152259),
            name: 'salePrice',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4618821172610158742),
            name: 'fullUnit',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 2188044154217595084),
            name: 'shortUnit',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 3522578223311206109),
            name: 'hsn',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 4543509230824641409),
            name: 'tax1',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 6698678539116934257),
            name: 'rate1',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 607872277086840769),
            name: 'tax2',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 6746747464927157925),
            name: 'rate2',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 432196019102149592),
            name: 'createdAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 1725407498194359687),
            name: 'updatedAt',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 4822398465634309740),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    Item: obx_int.EntityDefinition<Item>(
        model: _entities[0],
        toOneRelations: (Item object) => [],
        toManyRelations: (Item object) => {},
        getId: (Item object) => object.id,
        setId: (Item object, int id) {
          object.id = id;
        },
        objectToFB: (Item object, fb.Builder fbb) {
          final itemNameOffset = fbb.writeString(object.itemName);
          final quantityOffset = fbb.writeString(object.quantity);
          final mrpOffset = fbb.writeString(object.mrp);
          final salePriceOffset = fbb.writeString(object.salePrice);
          final fullUnitOffset = fbb.writeString(object.fullUnit);
          final shortUnitOffset = fbb.writeString(object.shortUnit);
          final hsnOffset = fbb.writeString(object.hsn);
          final tax1Offset = fbb.writeString(object.tax1);
          final rate1Offset = fbb.writeString(object.rate1);
          final tax2Offset = fbb.writeString(object.tax2);
          final rate2Offset = fbb.writeString(object.rate2);
          fbb.startTable(15);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, itemNameOffset);
          fbb.addOffset(2, quantityOffset);
          fbb.addOffset(3, mrpOffset);
          fbb.addOffset(4, salePriceOffset);
          fbb.addOffset(5, fullUnitOffset);
          fbb.addOffset(6, shortUnitOffset);
          fbb.addOffset(7, hsnOffset);
          fbb.addOffset(8, tax1Offset);
          fbb.addOffset(9, rate1Offset);
          fbb.addOffset(10, tax2Offset);
          fbb.addOffset(11, rate2Offset);
          fbb.addInt64(12, object.createdAt.millisecondsSinceEpoch);
          fbb.addInt64(13, object.updatedAt.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final itemNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final quantityParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final mrpParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final salePriceParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final fullUnitParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final shortUnitParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 16, '');
          final hsnParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 18, '');
          final tax1Param = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 20, '');
          final rate1Param = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 22, '');
          final tax2Param = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 24, '');
          final rate2Param = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 26, '');
          final createdAtParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 28, 0));
          final updatedAtParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 30, 0));
          final object = Item(
              id: idParam,
              itemName: itemNameParam,
              quantity: quantityParam,
              mrp: mrpParam,
              salePrice: salePriceParam,
              fullUnit: fullUnitParam,
              shortUnit: shortUnitParam,
              hsn: hsnParam,
              tax1: tax1Param,
              rate1: rate1Param,
              tax2: tax2Param,
              rate2: rate2Param,
              createdAt: createdAtParam,
              updatedAt: updatedAtParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [Item] entity fields to define ObjectBox queries.
class Item_ {
  /// see [Item.id]
  static final id = obx.QueryIntegerProperty<Item>(_entities[0].properties[0]);

  /// see [Item.itemName]
  static final itemName =
      obx.QueryStringProperty<Item>(_entities[0].properties[1]);

  /// see [Item.quantity]
  static final quantity =
      obx.QueryStringProperty<Item>(_entities[0].properties[2]);

  /// see [Item.mrp]
  static final mrp = obx.QueryStringProperty<Item>(_entities[0].properties[3]);

  /// see [Item.salePrice]
  static final salePrice =
      obx.QueryStringProperty<Item>(_entities[0].properties[4]);

  /// see [Item.fullUnit]
  static final fullUnit =
      obx.QueryStringProperty<Item>(_entities[0].properties[5]);

  /// see [Item.shortUnit]
  static final shortUnit =
      obx.QueryStringProperty<Item>(_entities[0].properties[6]);

  /// see [Item.hsn]
  static final hsn = obx.QueryStringProperty<Item>(_entities[0].properties[7]);

  /// see [Item.tax1]
  static final tax1 = obx.QueryStringProperty<Item>(_entities[0].properties[8]);

  /// see [Item.rate1]
  static final rate1 =
      obx.QueryStringProperty<Item>(_entities[0].properties[9]);

  /// see [Item.tax2]
  static final tax2 =
      obx.QueryStringProperty<Item>(_entities[0].properties[10]);

  /// see [Item.rate2]
  static final rate2 =
      obx.QueryStringProperty<Item>(_entities[0].properties[11]);

  /// see [Item.createdAt]
  static final createdAt =
      obx.QueryDateProperty<Item>(_entities[0].properties[12]);

  /// see [Item.updatedAt]
  static final updatedAt =
      obx.QueryDateProperty<Item>(_entities[0].properties[13]);
}
